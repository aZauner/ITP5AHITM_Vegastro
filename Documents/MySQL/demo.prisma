generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String   @db.VarChar(255)
  content   String?
  published Boolean  @default(false)
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
}

model Profile {
  id     Int     @id @default(autoincrement())
  bio    String?
  user   User    @relation(fields: [userId], references: [id])
  userId Int     @unique
}

model User {
  id      Int      @id @default(autoincrement())
  email   String   @unique
  name    String?
  posts   Post[]
  profile Profile?
}

enum ActivityType {
  edit
  deletion
}

model Activity {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @db.Timestamptz(6)
  type      ActivityType

  user   User? @relation(fields: [userId], references: [id], onDelete: SetNull)
  userId Int?

  deletion Deletion?
  edit     Edit?
}

model Deletion {
  activity   Activity @relation(fields: [activityId], references: [id], onDelete: Cascade)
  activityId Int      @id

  table    Table?     @relation(fields: [tableId], references: [id], onDelete: SetNull)
  tableId  Int?

  recordId   Json
}

model Edit {
  activity   Activity @relation(fields: [activityId], references: [id], onDelete: Cascade)
  activityId Int      @id

  oldValue String
  newValue String

  attribute    Attribute?     @relation(fields: [attributeId], references: [id], onDelete: SetNull)
  attributeId  Int?

  recordId   Json
}


model Post {
  id         Int                 @id @default(autoincrement())
  title      String
  categories CategoriesOnPosts[]
}

model Category {
  id    Int                 @id @default(autoincrement())
  name  String
  posts CategoriesOnPosts[]
}

model CategoriesOnPosts {
  post       Post     @relation(fields: [postId], references: [id])
  postId     Int // relation scalar field (used in the `@relation` attribute above)
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int // relation scalar field (used in the `@relation` attribute above)
  assignedAt DateTime @default(now())
  assignedBy String

  @@id([postId, categoryId])
}